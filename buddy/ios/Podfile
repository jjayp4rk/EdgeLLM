# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
prepare_react_native_project!

# Add this for Xcode Cloud compatibility
install! 'cocoapods',
         :deterministic_uuids => false,
         :integrate_targets => true

target 'Buddy' do
  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )

    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Basic settings
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
        config.build_settings['ENABLE_BITCODE'] = 'NO'
        
        # Fix for Xcode Cloud
        config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
        
        # Ensure frameworks are signed properly
        config.build_settings['CODE_SIGN_IDENTITY'] = ''
        config.build_settings['CODE_SIGNING_REQUIRED'] = 'NO'
        config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'

        # Fix C++ header search paths
        config.build_settings['HEADER_SEARCH_PATHS'] = [
          '$(inherited)',
          '$(PODS_ROOT)/Headers/Public/**',
          '$(PODS_ROOT)/Headers/Private/**',
          '$(PODS_CONFIGURATION_BUILD_DIR)/**',
          '$(PODS_ROOT)/Headers/Public/Yoga/**',
          '$(PODS_ROOT)/Headers/Private/Yoga/**',
          '$(PODS_ROOT)/Headers/Public/React/**',
          '$(PODS_ROOT)/Headers/Private/React/**'
        ]

        # Fix C++ standard library issues
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
        config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
        config.build_settings['OTHER_CPLUSPLUSFLAGS'] = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -DFOLLY_HAS_COROUTINES=0'

        # Additional compiler flags for C++ headers
        config.build_settings['OTHER_CFLAGS'] = [
          '$(inherited)',
          '-DFOLLY_NO_CONFIG',
          '-DFOLLY_MOBILE=1',
          '-DFOLLY_USE_LIBCPP=1',
          '-DFOLLY_HAS_COROUTINES=0'
        ]
      end

      # Generate proper xcfilelist files for Xcode Cloud
      if target.name == 'Pods-Buddy'
        create_xcode_cloud_files(target, installer)
      end
    end
  end
end

def create_xcode_cloud_files(target, installer)
  support_files_dir = "Pods/Target Support Files/#{target.name}"
  
  # Create framework list files
  File.write("#{support_files_dir}/#{target.name}-frameworks-Release-input-files.xcfilelist", "")
  File.write("#{support_files_dir}/#{target.name}-frameworks-Release-output-files.xcfilelist", "")
  
  # Create resource list files
  File.write("#{support_files_dir}/#{target.name}-resources-Release-input-files.xcfilelist", "")
  File.write("#{support_files_dir}/#{target.name}-resources-Release-output-files.xcfilelist", "")
end
